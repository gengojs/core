{"version":3,"sources":["lib/modules/extractify/index.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAc,QAAQ;;;;IAEhB,OAAO;AACA,WADP,OAAO,CACC,KAAK,EAAE,MAAM,EAAE;0BADvB,OAAO;;AAET,QAAI,MAAM,GAAG,EAAE;QACb,IAAI,GAAG,EAAE;QACT,KAAK,CAAC;;AAER,QAAI,MAAM,GAAG,CAAC,EAAE;;AAEd,WAAK,CAAC,OAAO,CAAC,UAAA,IAAI;eAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;OAAA,CAAC,CAAC;KACxC;;SAEI,IAAI,MAAM,KAAK,CAAC,EAAE;;AAErB,WAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEjB,UAAI,oBAAE,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,KAC9B,IAAI,oBAAE,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,KACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAEtB,YAAM,GAAG,oBAAE,aAAa,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KAC9C;;AAED,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;;eAxBG,OAAO;;WAyBF,qBAAG;AACV,aAAO,CAAC,oBAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;;;WACM,mBAAG;AACR,aAAO,CAAC,oBAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;;SA9BG,OAAO;;;qBAkCL,UAAC,KAAK,EAAE,MAAM,EAAK;;AAEzB,SAAO,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CACnC","file":"lib/modules/extractify/index.js","sourcesContent":["import _ from 'lodash';\r\n\r\nclass Extract {\r\n  constructor(array, length) {\r\n    var values = {},\r\n      args = [],\r\n      value;\r\n    // If the arguments is greater than 2 (because of offset)\r\n    if (length > 2) {\r\n      // Just append them to the array\r\n      array.forEach(item => args.push(item));\r\n    }\r\n    // If they are exactly 2 argument\r\n    else if (length === 2) {\r\n      // Get the first value\r\n      value = array[0];\r\n      // Set arguments [...]\r\n      if (_.isArray(value)) args = value;\r\n      else if (_.isPlainObject(value)) args = [];\r\n      else args.push(value);\r\n      // Set values {...}\r\n      values = _.isPlainObject(value) ? value : {};\r\n    }\r\n\r\n    this.values = values;\r\n    this.args = args;\r\n  }\r\n  hasValues() {\r\n    return !_.isEmpty(this.values);\r\n  }\r\n  hasArgs() {\r\n    return !_.isEmpty(this.args);\r\n  }\r\n}\r\n\r\nexport\r\ndefault (array, length) => {\r\n  /*jshint strict:false*/\r\n  return new Extract(array, length);\r\n};"]}