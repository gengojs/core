{"version":3,"sources":["core/index.js"],"names":[],"mappings":";;;;;;;;;;;;uBAAgB,YAAY;;;;kCACuB,sBAAsB;;4BACvD,eAAe;;;;sBACnB,QAAQ;;;;;;IAEhB,KAAK;;;AAEG,WAFR,KAAK,CAEI,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;;;0BAFrC,KAAK;;AAGP,mCAAM,MAAM,EAAE,OAAO,cAAY,KAAK,CAAC,IAAI,yBAA2B,CAAC;AACvE,mCAAM,MAAM,EAAE,MAAM;;mBAEL,IAAI,CAAC,OAAO,GAAG,qBAAI,OAAO,CAAA;;mBAE1B,IAAI,CAAC,OAAO,GAAG,gCAAO,OAAO,CAAC,CAAA,CAAI,CAAC;;AAElD,QAAI,CAAC,OAAO,GAAG,iCAAQ,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;AAExD,wBAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,KAAK,OAAM;KAAA,CAAC,CAAC;GACrD;;;;eAbG,KAAK;;WAeH,eAAC,MAAM,EAAW;;;wCAAN,IAAI;AAAJ,YAAI;;;AACpB,qCAAM,MAAM,EAAE,OAAO,cAAY,KAAK,CAAC,IAAI,mBAAqB,CAAC;;AAEjE,aAAO,oBAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAA,CAAC,EACrC;AAAE,eAAO,CAAC,CAAC,KAAK,SAAO,CAAC,kCAAS,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;OAAE,CAAC,CAAC;KACxD;;;;;WAEI,cAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;;;AACpB,qCAAM,MAAM,EAAE,OAAO,cAAY,KAAK,CAAC,IAAI,kBAAoB,CAAC;;AAEhE,0BAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAA,CAAC;eAAI,CAAC,CAAC,KAAK,oBAAiB;OAAA,CAAC,CAAC;;AAE9D,0BAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAA,CAAC;eAAI,CAAC,CAAC,KAAK,oBAAiB;OAAA,CAAC,CAAC;;AAE9D,0BAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAA,CAAC;eAAI,CAAC,CAAC,KAAK,oBAAiB;OAAA,CAAC,CAAC;;AAEhE,uCAAQ,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACrC;;;;;WAEM,kBAAG;;;;AACR,qCAAM,MAAM,EAAE,OAAO,cAAY,KAAK,CAAC,IAAI,oBAAsB,CAAC;;AAElE,aAAO,oBAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAA,CAAC,EAClC;AAAE,eAAO,CAAC,CAAC,KAAK,qBAAiB,CAAC;OAAE,CAAC,CAAC;KACzC;;;SAvCG,KAAK;;;qBAyCI,UAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAK;AAC7C,cAAY,CAAC;AACb,SAAO,IAAI,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC9C","file":"core/index.js","sourcesContent":["import pkg from '../package';\nimport { inputify, plugify, optify, servify } from 'gengojs-core-modules';\nimport debug from 'gengojs-debug';\nimport _ from 'lodash';\n/* Class Gengo */\nclass Gengo {\n  /* Gengo constructor */\n  constructor (options, plugins, defaults) {\n    debug('core', 'debug', `class: ${Gengo.name}`, `process: constructor`);\n    debug('core', 'info',\n      // Current version\n      `version: ${(this.version = pkg.version)}`,\n      // Options\n      `options: ${(this.options = optify(options))}`);\n    // Set Plugins\n    this.plugins = plugify(plugins, this.options, defaults);\n    // Backend plugin\n    _.forEach(this.plugins.backend, f => f.apply(this));\n  }\n  /* i18ns the input */\n  parse (phrase, ...args) {\n    debug('core', 'debug', `class: ${Gengo.name}`, `process: parse`);\n    // Parser plugin\n    return _.forEach(this.plugins.parser, f => \n      { return f.apply(this, [inputify(phrase, args)]); });\n  }\n  /* Middleware for Node frameworks */\n  ship (req, res, next) {\n    debug('core', 'debug', `class: ${Gengo.name}`, `process: ship`);\n    // Header plugin\n    _.forEach(this.plugins.header, f => f.apply(this, arguments));\n    // Router plugin\n    _.forEach(this.plugins.router, f => f.apply(this, arguments));\n    // Localize plugin\n    _.forEach(this.plugins.localize, f => f.apply(this, arguments));\n    /* Apply API to the objects/request/response */\n    servify(this).apply(req, res, next);\n  }\n  /* Apply the API to objects */\n  assign () {\n    debug('core', 'debug', `class: ${Gengo.name}`, `process: assign`);\n    // API plugin\n    return _.forEach(this.plugins.api, f => \n      { return f.apply(this, arguments); });\n  }\n}\nexport default (options, plugins, defaults) => {\n  'use strict';\n  return new Gengo(options, plugins, defaults);\n};  "],"sourceRoot":"/source/"}